1.Git配置name、email

安装完成后，还需要最后一步设置，在命令行输入：
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。

注意git config命令的--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。

2.Git 初始化repository

$ cd c:
$ mkdir GitLearningFiles
$ cd GitLearningFiles
$ git init

3.存入代码（文本格式，Unicode编码）

1）将代码文件放入当前路径下
2）git status查看状态
3）git add readme.txt 将文件添加到监控目录
4）git commit

4.修改，提交新版本

1）修改代码文件
2）git add readme.txt 将文件重新添加到监控目录
3）git commit -m "info to user"

5.读文档 $ cat readme.txt

6.版本回退
$ git reset --hard head~n 回退到n步之前

7.版本前进
$ git reset --hard commitId
使用指令$ git reflog查询历史指令（版本变更）commitId

8.工作区和暂存区
工作区（Working Directory）：就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区：
版本库（Repository）：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。
Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。

在工作区修改代码文件，git add后，把文件修改添加到暂存区，git commit后，暂存区文件修改提交到版本库当前分支。

9.查看工作区和版本库最新版本区别
$ git diff HEAD -- readme.txt

10. 撤销工作区修改
1）工作区修改未add到暂存区，撤销指令：$ git checkout --file，执行后，工作区回退到上次add或commit；
2）工作区修改add到暂存区，撤销指令：$ git reset HEAD file，执行后，暂存区清空，工作区回退到状态1）；
3）工作区修改commit已提交，撤销指令：$ git reset --hard HEAD^1。

11. 删除文件
1）$git rm file
2）$git commit -m "remove file commond"

12. 远程仓库（先有本地库，后有远程库）
1）github注册一个免费仓库  仓库地址git@github.com:houshengkun/GitLearningFiles.git
2）在本地添加远程库，别名为origin，指令：$ git remote add origin git@github.com:houshengkun/GitLearningFiles.git
3）第一次推送本地库到远程库origin，指令：$ git push -u origin master；后续推送指令：$ git push origin master

13. 远程仓库（先有远程库，后有本地库）
1）github注册一个仓库并初始化
2）获取远程仓库地址git@github.com:houshengkun/TestGitLearningRemote.git
3）仓库克隆到本地$ git clone git@github.com:houshengkun/TestGitLearningRemote.git
